"use client";

import { useState } from "react";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { useRouter, useSearchParams } from "next/navigation";

export default function RetailerCatalogPage({ params }: { params: { catalogCode: string } }) {
  const [phoneNumber, setPhoneNumber] = useState("");
  const [error, setError] = useState("");
  const [catalog, setCatalog] = useState<any>(null);
  const [isLoading, setIsLoading] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError("");
    setIsLoading(true);
    setCatalog(null);
    try {
      const response = await fetch(`/api/retailer/catalog-access`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ phoneNumber, catalogCode: params.catalogCode })
      });
      if (response.ok) {
        const data = await response.json();
        setCatalog(data.catalog);
      } else {
        const data = await response.json();
        setError(data.error || "Access denied");
      }
    } catch (err) {
      setError("An error occurred. Please try again.");
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-50">
      <Card className="w-full max-w-lg">
        <CardHeader>
          <CardTitle>Access Catalog</CardTitle>
        </CardHeader>
        <CardContent>
          {!catalog ? (
            <form onSubmit={handleSubmit} className="space-y-4">
              <div>
                <label htmlFor="phoneNumber" className="block mb-1 font-medium">Enter your phone number to view this catalog:</label>
                <Input
                  id="phoneNumber"
                  value={phoneNumber}
                  onChange={e => setPhoneNumber(e.target.value)}
                  required
                  placeholder="Phone Number"
                />
              </div>
              {error && <div className="text-red-600 text-sm">{error}</div>}
              <Button type="submit" className="w-full" disabled={isLoading}>
                {isLoading ? "Checking..." : "Access Catalog"}
              </Button>
            </form>
          ) : (
            <div>
              <h2 className="text-xl font-bold mb-2">{catalog.catalogName} ({catalog.catalogCode})</h2>
              {/* Render catalog details and products here */}
              <div className="mt-4">Catalog content goes here...</div>
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  );
} 